# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at

#   http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# min_utf8, max_utf8
statement ok
CREATE TABLE strings (value TEXT, id int);

statement ok
INSERT INTO strings VALUES
 ('d', 1),
 ('a', 3),
 ('c', 1),
 ('b', 1),
 ('d', 1),
 ('z', 2),
 ('c', 1),
 ('a', 2);

query IT
SELECT id, MIN(value) FROM strings GROUP BY id ORDER BY id;
----
1 b
2 a
3 a

query IT
SELECT id, MAX(value) FROM strings GROUP BY id ORDER BY id;
----
1 d
2 z
3 a



#query TT
#SELECT MIN(value), MAX(value) FROM strings
#----
#a z


query ITT
SELECT id, MIN(value), MAX(value) FROM strings GROUP BY id ORDER BY id;
----
1 b d
2 a z
3 a a





# min_utf8view, max_utf8view
statement ok
CREATE VIEW string_views AS SELECT id, arrow_cast(value, 'Utf8View') as value FROM strings;


query IT
SELECT id, MIN(value) FROM string_views GROUP BY id ORDER BY id;
----
1 b
2 a
3 a

query IT
SELECT id, MAX(value) FROM string_views GROUP BY id ORDER BY id;
----
1 d
2 z
3 a



#query TT
#SELECT MIN(value), MAX(value) FROM string_views
#----
#a z


query ITT
SELECT id, MIN(value), MAX(value) FROM string_views GROUP BY id ORDER BY id;
----
1 b d
2 a z
3 a a



# min_utf8view, max_utf8view
statement ok
CREATE VIEW binary_views AS SELECT id, arrow_cast(value, 'BinaryView') as value FROM strings;


query I?
SELECT id, MIN(value) FROM binary_views GROUP BY id ORDER BY id;
----
1 62
2 61
3 61

query I?
SELECT id, MAX(value) FROM binary_views GROUP BY id ORDER BY id;
----
1 64
2 7a
3 61



#query TT
#SELECT MIN(value), MAX(value) FROM binary_views
#----
#a z


query I??
SELECT id, MIN(value), MAX(value) FROM binary_views GROUP BY id ORDER BY id;
----
1 62 64
2 61 7a
3 61 61
